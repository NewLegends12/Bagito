#!/bin/bash

clear

function endscript() {
  exit 1
}

trap endscript 2 15

declare -a DNS_IPS=('124.6.181.12' '124.6.181.36' '121.54.70.131')
declare -a NAME_SERVERS=('ns-sgfree.elcavlaw.com' 'sdns.myudph.elcavlaw.com')

LOOP_DELAY=10

DIG_EXEC="DEFAULT"
CUSTOM_DIG=/data/data/com.termux/files/home/go/bin/fastdig
VER=0.3

case "${DIG_EXEC}" in
  DEFAULT|D)
    _DIG="$(command -v dig)"
    ;;
  CUSTOM|C)
    _DIG="${CUSTOM_DIG}"
    ;;
esac

if [ ! $(command -v ${_DIG}) ]; then
  printf "%b" "Dig command failed to run, please install dig(dnsutils) or check the DIG_EXEC & CUSTOM_DIG variable.\n" && exit 1
fi

# Initialize the counter
count=1

lantin_ascii_art() {
  echo -e " ______               __________        "
  echo -e "___  / ______ _________  /___(_)______ "
  echo -e "__  /  _  __ \`/_  __ \\  __/_  /__  __ \\"
  echo -e "_  /___/ /_/ /_  / / / /_ _  / _  / / /"
  echo -e "/_____/\__,_/ /_/ /_/\\__/ /_/  /_/ /_/ "
}

check(){
  local border_color="\e[34m"  # Light magenta color
  local success_color="\e[92m"  # Light green color
  local fail_color="\e[91m"    # Light red color
  local header_color="\e[96m"  # Light cyan color
  local reset_color="\e[0m"    # Reset to default terminal color
  local padding="  "            # Padding for aesthetic

  # Header
  echo -e "${border_color}↓========================================↓${reset_color}"
  echo -e "${border_color}│${header_color}${padding}DNS Status Check Results${padding}${reset_color}"
  echo -e "${border_color}↕========================================↕${reset_color}"

  for T in "${DNS_IPS[@]}"; do
    for R in "${NAME_SERVERS[@]}"; do
      lantin_ascii_art
      result=$(${_DIG} @${T} ${R} +short)
      if [ -z "$result" ]; then
        STATUS="${success_color}Success${reset_color}"
      else
        STATUS="${fail_color}Failed${reset_color}"
      fi
      echo -e "${border_color}↕${padding}${reset_color}DNS IP: ${T}${padding}${reset_color}"
      echo -e "${border_color}↕${padding}NameServer: ${R}${padding}${reset_color}"
      echo -e "${border_color}↕${padding}Status: ${STATUS}${padding}${reset_color}"  # Fixed this line
    done
  done

  # Check count and Loop Delay
  echo -e "${border_color}↕========================================↕${reset_color}"
  echo -e "${border_color}↕${padding}${header_color}Check count: ${count}${padding}${reset_color}"
  echo -e "${border_color}↕${padding}Loop Delay: ${LOOP_DELAY} seconds${padding}${reset_color}"

  # Footer
  echo -e "${border_color}↑========================================↑${reset_color}"
}

countdown() {
    for i in 2 1 0; do
        echo "Checking started in $i seconds..."
        sleep 1
    done
}

echo ""
echo ""
echo "Start...."
echo ""
echo ""
countdown
clear

# Main loop
while true; do
  check
  ((count++))  # Increment the counter
  sleep $LOOP_DELAY
done

exit 0
